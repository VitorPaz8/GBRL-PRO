services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "4200:80"
    networks:
      - app-network
    depends_on:
      - gateway

  gateway:
    build:
      context: ./gateway
    ports:
      - "8080:3000"
    networks:
      - app-network
    depends_on:
      - auth-service
      - user-service
      - product-service
      - cart-service
      - order-service
      - inventory-service
      - payment-service

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8081:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=rabbitmq

  user-service:
    build:
      context: ./backend/user-service
    ports:
      - "8082:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  product-service:
    build:
      context: ./backend/product-service
    ports:
      - "8083:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  cart-service:
    build:
      context: ./backend/cart-service
    ports:
      - "8084:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  order-service:
    build:
      context: ./backend/order-service
    ports:
      - "8085:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=rabbitmq

  inventory-service:
    build:
      context: ./backend/inventory-service
    ports:
      - "8086:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  payment-service:
    build:
      context: ./backend/payment-service
    ports:
      - "8087:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  admin-dashboard:
    build:
      context: ./backend/admin-dashboard
    ports:
      - "8088:8080"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # UI de administração
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: